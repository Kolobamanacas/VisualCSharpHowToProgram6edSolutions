// Solution to exercises from "C# How to Program 6th edition".
// Chapter 7.
// Exercise 24 (07.30) Guess The Number.

using System;

class GuessTheNumber
{
    // Creating an object "randomNumbers" of a class "Random" for following random number generation.
    private static Random randomNumbers = new Random();

    static void Main()
    {
        // Initialize "toProceed" local variable to "true" to use it as a control statemnt in the while loop.
        bool toProceed = true;
        // Local variable to store a user's input.
        int attemptNumber = 0;

        /* The outermost while loop used to start the whole guess process from the beginning when previous number is successfully guessed. */
        while (toProceed)
        {
            // Local varriable "numberToGuess" stores a random number generated by the "GenerateNumber()" method.
            int numberToGuess = GenerateNumber();
            // Print a wellcome message.
            Console.Write("Guess a number between 1 and 1000: ");
            // Get a number guess from a user.
            attemptNumber = int.Parse(Console.ReadLine());

            // The innermost while loop executes until a user guess the number correctly.
            while (attemptNumber != numberToGuess)
            {
                // Depending on the user's guess is greater or less than generated number print an appropriate hint.
                if (attemptNumber > numberToGuess)
                {
                    Console.WriteLine("Too high. Try again.");
                }
                else if (attemptNumber < numberToGuess)
                {
                    Console.WriteLine("Too low. Try again.");
                }

                // Ask a user to make another attempt.
                Console.Write("Guess a number between 1 and 1000: ");
                attemptNumber = int.Parse(Console.ReadLine());
            }

            /* Reaching this point means that user guessed the number and execution flow left the innermost while loop. Print a congratiolations message. */
            Console.WriteLine("Congratiolations. You guessed the number!");

            Console.WriteLine();
            // Check whether a user wants to continue.
            toProceed = ToProceed();
        }
    }

    /* "ToProceed()" method asks a user whether he/she wants to guess another number. If a user enters "yes" then the method returns the value of "true" and otherwise it returns "false". */
    private static bool ToProceed()
    {
        Console.Write("Do you want to guess another number (\"yes\" or \"no\"): ");
        string answer = Console.ReadLine();

        while (answer != "yes" && answer != "no")
        {
            Console.WriteLine("The answer should be \"yes\" or \"no\".");
            Console.Write("Do you want to guess another number (\"yes\" or \"no\"): ");
            answer = Console.ReadLine();
        }

        if (answer == "yes")
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    /* The method "Next()" of class "Random" called through it's object "randomNumbers" returns random number from 0 to 999. Combined with + 1 the method "GenerateNumber()" eventually return a random number from 1 to 1000. */
    private static int GenerateNumber() => randomNumbers.Next(1000) + 1;
}